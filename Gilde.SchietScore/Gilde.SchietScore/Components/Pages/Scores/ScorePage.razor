@page "/uitslagen"
@    using Models
@rendermode InteractiveServer

<PageTitle>Uitslagen</PageTitle>
<AuthorizeView>
    @if (_scores == null || AllGameWeeks == null || AllGameYears == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h1>@Title</h1
            <Gilde.SchietScore.Components.Filter.KorpsFilterComponent 
                @bind-SelectedKorps="@SelectedKorps" 
                @bind-SelectedKorps:after="RetrieveGameScores"></Gilde.SchietScore.Components.Filter.KorpsFilterComponent>
        </div>
    
        <Gilde.SchietScore.Components.Filter.YearFilterComponent 
            @bind-SelectedYear="@SelectedYear" 
            @bind-SelectedYear:after="RetrieveGameScoresResetSelectedWeek" 
            AllGameYears="AllGameYears"></Gilde.SchietScore.Components.Filter.YearFilterComponent>

        <Gilde.SchietScore.Components.Filter.WeekFilterComponent 
            @bind-SelectedWeek="@SelectedWeek" 
            @bind-SelectedWeek:after="RetrieveGameScores" 
            AllGameWeeks="AllGameWeeks"></Gilde.SchietScore.Components.Filter.WeekFilterComponent>

        <h4>@SelectedKorps.Name</h4>
        <div class="tableFixHead">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Naam</th>
                        <th>Lid</th>
                        <th>Score</th>
                        <th>Datum</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var groupByGameElement in _scores.GroupBy(score => score.GameElement).OrderBy(group => group.Key.Level).ThenBy(group => group.Key.Name))
                    {
                        <tr>
                            <td colspan="4"><strong>@groupByGameElement.Key.Name @groupByGameElement.Key.Level</strong></td>
                        </tr>
                        @foreach (var score in groupByGameElement.OrderBy(score => score.Member.Name))
                        {
                            <tr>
                                <td></td>
                                <td>@score.Member.Name</td>
                                <td>@score.Amount</td>
                                <td>@if (score.Date == new DateOnly())
                                {
                                    <text>@SelectedYear</text>
                                }
                                else
                                {
                                    <text>@score.Date.ToString("dd-MM-yyyy")</text>
                                }</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    }
</AuthorizeView>